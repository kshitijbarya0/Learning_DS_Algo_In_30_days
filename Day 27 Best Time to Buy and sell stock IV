#include <bits/stdc++.h>

int maximumProfit(vector<int> &prices, int n, int k)
{
   // vector<vector<int>> dp(n+1, vector<int>(2*k +1, 0));
   vector<int> after(2*k +1, 0), curr(2*k +1, 0);

   for(int ind=n-1; ind>=0; ind--){
       for(int tran = 2*k-1; tran>=0; tran--){
           if(tran % 2 == 0)
               curr[tran] = max(-prices[ind] + after[tran+1],
                   0 + after[tran]);
           else
               curr[tran] = max(prices[ind] + after[tran+1],
                   0 + after[tran]);
       }
       after = curr;
   }
   return after[0];
}
