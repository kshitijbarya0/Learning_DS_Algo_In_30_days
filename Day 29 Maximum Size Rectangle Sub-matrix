#include <bits/stdc++.h>
using namespace std;
int MAH(vector<int> v, int n) {
  vector<int> left(n, -1);
  vector<int> right(n, n);
  stack<int> s;
  int mx = 0;
  // for left
  for (int i = 0; i <= n - 1; ++i) {
    while (!s.empty() && v[s.top()] >= v[i]) {
      s.pop();
    }
    if (!s.empty()) {
      left[i] = s.top();
    }
    s.push(i);
  }

  // clear stack
  while (!s.empty())
    s.pop();
  // for right
  for (int i = n - 1; i >= 0; --i) {
    while (!s.empty() && v[s.top()] >= v[i]) {
      s.pop();
    }
    if (!s.empty()) {
      right[i] = s.top();
    }
    s.push(i);
  }
  // max rectangle
  for (int i = 0; i < n; ++i) {
    int width = right[i] - left[i] - 1;
    mx = max(mx, v[i] * width);
  }
  return mx;
}

int maximalAreaOfSubMatrixOfAll1(vector<vector<int>> &a, int n, int m) {
  vector<int> v(m, 0);
  int mx = 0;
  for (int i = 0; i < m; ++i) {
    v.push_back(a[0][i]);
  }
  mx = max(mx, MAH(v, m));
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < m; ++j) {
      if (a[i][j] == 0) {
        v[j] = 0;
      } else {
        v[j] += a[i][j];
      }
    }
    mx = max(mx, MAH(v, m));
  }
  return mx;
}

