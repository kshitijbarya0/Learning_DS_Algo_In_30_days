#include<bits/stdc++.h>

bool helper(int ind,int target,vector<int>&arr,vector<vector<int>>&dp)

{
    if(ind>=arr.size())
    return target==0;
    if(dp[ind][target]!=-1)
    return dp[ind][target];

    //Exclude
    if(helper(ind+1,target,arr,dp))
    return dp[ind][target]=true;
    //Include
    if(arr[ind]<=target)
    return dp[ind][target]=helper(ind+1,target-arr[ind],arr,dp);
   return dp[ind][target]=false; 
}
bool canPartition(vector<int> &arr, int n)
{
    // Write your code here.
    int sum=0;
    for(int num:arr)
    sum+=num;
    if(sum%2==1)
    return false;
    vector<vector<int>>dp(arr.size(),vector<int>((sum/2)+1,-1));
    return helper(0,sum/2,arr,dp);
}

 

